@use "../base/variables" as var;

.#{var.$prefix}note {
  --_#{var.$prefix}dismiss-popup-duration: 4000ms;
  --_#{var.$prefix}px: var(--#{var.$prefix}spacing-16);
  --_#{var.$prefix}py: var(--#{var.$prefix}spacing-12);
  border-radius: var(--#{var.$prefix}radius-8);
  background-color: var(--#{var.$prefix}color-white);
  border: 1px solid var(--#{var.$prefix}color-gray-85);
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto auto;
  transition: grid-template-rows
    calc(var(--#{var.$prefix}display-popup-duration) / 2) ease-in-out;
  overflow: hidden;

  &--expandable {
    grid-template-rows: auto 0fr;
    animation: pop-in var(--#{var.$prefix}display-popup-duration);
  }

  &:has(&__header[aria-expanded="true"]) {
    grid-template-rows: auto 1fr;
  }
  // reset closing animation if note is hover or expanded
  // use is interacting with it
  &--expandable:hover &__header::after,
  &__header[aria-expanded="true"]::after {
    animation: none;
    opacity: 0;
  }

  &__body {
    overflow: hidden;
  }

  &__header[aria-expanded="true"] {
    cursor: default;
  }
  &__header {
    padding-inline: var(--_#{var.$prefix}px);
    padding-block: var(--_#{var.$prefix}py);
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-bottom: 1px solid var(--#{var.$prefix}bg-divider);
    position: relative;
    isolation: isolate;
    cursor: pointer;
    &::after {
      content: "";
      background-color: var(--#{var.$prefix}color-black-alpha-10);
      position: absolute;
      height: 100%;
      left: 0;
      z-index: -1;
      animation: countDown var(--_#{var.$prefix}dismiss-popup-duration) 125ms
        forwards ease-in;
    }
  }

  &__close {
    cursor: pointer;
    width: 20px;
    aspect-ratio: 1;
    border-radius: var(--#{var.$prefix}radius-round);
    border: 1px solid var(--#{var.$prefix}color-gray-60);
    background: transparent;
    position: relative;
    &::after,
    &::before {
      content: "";
      position: absolute;
      width: 50%;
      height: 2px;
      background-color: var(--#{var.$prefix}color-black-alpha-70);
      top: 50%;
      left: 50%;
      translate: -50% -50%;
    }
    &::after {
      rotate: 45deg;
    }
    &::before {
      rotate: -45deg;
    }
  }
  &__category {
    font-size: var(--#{var.$prefix}font-size-md);
    font-weight: var(--#{var.$prefix}font-weight-500);
    line-height: var(--#{var.$prefix}line-height-4);
    text-transform: capitalize;
  }
  &__content {
    padding-inline: var(--_#{var.$prefix}px);
  }
  &__text {
    font-size: var(--#{var.$prefix}font-size-md);
    line-height: var(--#{var.$prefix}line-height-5);
    padding-block: var(--_#{var.$prefix}py);
    width: 30ch;
  }
}

@keyframes countDown {
  from {
    width: 100%;
  }
  to {
    width: 0%;
  }
}
